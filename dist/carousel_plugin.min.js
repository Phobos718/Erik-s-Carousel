!function(t){t.myNamespace||(t.myNamespace={}),t.myNamespace.ErikzCarousel=function(n,e){var s=this;s.$el=t(n),s.el=n,s.buttons={},s.indicator={},s.slides={},s.$el.data("myNamespace.ErikzCarousel",s),s.init=function(){s.options=t.extend({},t.myNamespace.ErikzCarousel.defaultOptions,e),s.buttons.init(),s.indicator.init(),s.highlightButtons(),s.buttons_enabled=!0,s.autoplay()},s.buttons.init=function(){s.options.buttons&&(t(".carousel").append('\x3c!-- Left/Right controls --\x3e\n<div class="button">\n<button class="bttn right">\n<p>&#10095;</p>\n</button>\n<button class="bttn left">\n<p>&#10094;</p>\n</button>\n</div>\n'),t(".right").click(function(){s.buttons_enabled&&s.buttons.click("right")}),t(".left").click(function(){s.buttons_enabled&&s.buttons.click("left")}))},s.buttons.click=function(i){_current_index=t(".indicator ul li").index(t(".active_button")),_next_index=_current_index===s.slides.buildArray().length-1?0:_current_index+1,_prev_index=0===_current_index?s.slides.buildArray().length-1:_current_index-1,"right"===i&&s.buttons_enabled&&(0!=_next_index||s.options.loopable)?s.slides.slideTo(_next_index,i):"left"===i&&s.buttons_enabled&&(0!=_current_index||s.options.loopable)&&s.slides.slideTo(_prev_index,i)},s.indicator.init=function(){if(s.options.indicator){for(_slideslength=s.slides.buildArray().length,t(".carousel").append('\x3c!-- Indicator --\x3e\n<div class="indicator bttn"><ul>\n<li class="indicator_button active_button"></li>\n'),i=2;i<=_slideslength;i++)t(".indicator ul").append('<li class="indicator_button"></li>\n');t(".indicator_button").click(function(){s.indicator.click(this)})}},s.indicator.click=function(i){s.buttons_enabled&&(t(".active_button").attr("class","indicator_button"),t(i).attr("class","indicator_button active_button"),t(".indicator ul li").index(i)>t(".slides ul li").index(t(".slide_active"))?s.slides.slideTo(t(".indicator ul li").index(i),"right"):t(".indicator ul li").index(i)<t(".slides ul li").index(t(".slide_active"))&&s.slides.slideTo(t(".indicator ul li").index(i),"left"))},s.slides.buildArray=function(){var n=[];for(i=1;i<=t(".slides ul").children().length;i++)n.push(t(".slides ul li:nth-child("+i.toString()+")"));return n},s.slides.slideTo=function(i,n){var e="",o=s.slides.buildArray()[i];s.buttons_enabled=!1,"right"===n?e=-t(".carousel").width():"left"===n&&(e=t(".carousel").width()),"slide"===s.options.animation?s.slides.animSlide(o,e):"fade"===s.options.animation&&s.slides.animFade(o),t(".active_button").attr("class","indicator_button"),t(".indicator ul li:nth-child("+(i+1)+")").attr("class","indicator_button active_button")},s.slides.animFade=function(i){i.css({opacity:"1","z-index":"-1"}),t(".slide_active").fadeTo(s.options.animSpeed,0,function(){t(".slide_active").attr("class","slide"),i.attr("class","slide_active"),i.css({"z-index":""}),s.buttons_enabled=!0})},s.slides.animSlide=function(i,n){i.css({right:n.toString()+"px",opacity:"1"}),t(".slide_active").animate({right:(-n).toString()+"px"},{duration:s.options.animSpeed,queue:!1,complete:function(){t(this).attr("class","slide").css({right:"",opacity:""})}}),i.animate({right:"0px"},{duration:s.options.animSpeed,queue:!1,complete:function(){t(this).attr("class","slide_active"),s.buttons_enabled=!0}})},s.highlightButtons=function(){t(".bttn").each(function(){t(this).mouseenter(function(){t(this).fadeTo("fast",.9)}),t(this).mouseleave(function(){t(this).fadeTo("fast",.4)})})},s.autoplay=function(){s.options.autoplay&&window.setInterval(function(){s.buttons.click("right")},s.options.autoplay)},s.init()},t.myNamespace.ErikzCarousel.defaultOptions={animSpeed:500,animation:"slide",loopable:!0,autoplay:!1,indicator:!0,buttons:!0},t.fn.ErikzCarousel=function(i){return this.each(function(){new t.myNamespace.ErikzCarousel(this,i)})}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
